/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.flexdesktop.user.GraphicInterface;

import com.flexdesktop.connections.restfulConnection;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Jason
 */
public class Frame extends javax.swing.JFrame {

    private static final int OPCION0 = 0;
    private static final int OPCION1 = 1;
    private static final int OPCION2 = 2;
    private static final int OPCION3 = 3;
    private static final int OPCION4 = 4;
    private static final int OPCION5 = 5;

    private final int ABRIRCUENTAAHORROALAVISTA = 1;
    private final int ABRIRCUENTAPOROBJETIVO = 3;

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
    }

//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelCliente = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableModuloCltFisico = new javax.swing.JTable();
        jLabelVerSelected = new javax.swing.JLabel();
        jPanelCltJuridico = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabelVerSelected1 = new javax.swing.JLabel();
        jPanelCuentas = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabelSelectRowCuenta = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jPanelReportes = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanelCierres = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableCierres = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableModuloCltFisico.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jTableModuloCltFisico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"   Registrar"},
                {"   Consultar"},
                {"   Ver Listado"},
                {"   Eliminar"},
                {"   Actualizar"},
                {null},
                {null}
            },
            new String [] {
                "Acción"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableModuloCltFisico.setGridColor(new java.awt.Color(255, 255, 255));
        jTableModuloCltFisico.setRowHeight(41);
        jScrollPane1.setViewportView(jTableModuloCltFisico);

        jLabelVerSelected.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/flexdesktop/Images/Buttons/listBtt.png"))); // NOI18N
        jLabelVerSelected.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabelVerSelected.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelVerSelectedMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelClienteLayout = new javax.swing.GroupLayout(jPanelCliente);
        jPanelCliente.setLayout(jPanelClienteLayout);
        jPanelClienteLayout.setHorizontalGroup(
            jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelClienteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelVerSelected)
                .addGap(24, 24, 24))
        );
        jPanelClienteLayout.setVerticalGroup(
            jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClienteLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                .addGap(40, 40, 40)
                .addComponent(jLabelVerSelected)
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("    Clientes Físicos    ", jPanelCliente);

        jTable5.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"   Registrar"},
                {"   Consultar"},
                {"   Ver Listado"},
                {"   Eliminar"},
                {"   Actualizar"},
                {null},
                {null}
            },
            new String [] {
                "Acción"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.setGridColor(new java.awt.Color(255, 255, 255));
        jTable5.setRowHeight(41);
        jScrollPane5.setViewportView(jTable5);

        jLabelVerSelected1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/flexdesktop/Images/Buttons/listBtt.png"))); // NOI18N
        jLabelVerSelected1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabelVerSelected1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelVerSelected1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelCltJuridicoLayout = new javax.swing.GroupLayout(jPanelCltJuridico);
        jPanelCltJuridico.setLayout(jPanelCltJuridicoLayout);
        jPanelCltJuridicoLayout.setHorizontalGroup(
            jPanelCltJuridicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCltJuridicoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCltJuridicoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelVerSelected1)
                .addGap(43, 43, 43))
        );
        jPanelCltJuridicoLayout.setVerticalGroup(
            jPanelCltJuridicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCltJuridicoLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                .addGap(44, 44, 44)
                .addComponent(jLabelVerSelected1)
                .addGap(29, 29, 29))
        );

        jTabbedPane1.addTab("Cliente Jurídico     ", jPanelCltJuridico);

        jTable2.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {""},
                {"   Ahorro A La Vista"},
                {""},
                {"   Por Objetivo/ Ahorro Automático"},
                {""},
                {""},
                {""}
            },
            new String [] {
                "Abrir Cuenta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setGridColor(new java.awt.Color(255, 255, 255));
        jTable2.setRowHeight(41);
        jScrollPane2.setViewportView(jTable2);

        jLabelSelectRowCuenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/flexdesktop/Images/Buttons/listBtt.png"))); // NOI18N
        jLabelSelectRowCuenta.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabelSelectRowCuenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelSelectRowCuentaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelCuentasLayout = new javax.swing.GroupLayout(jPanelCuentas);
        jPanelCuentas.setLayout(jPanelCuentasLayout);
        jPanelCuentasLayout.setHorizontalGroup(
            jPanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCuentasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCuentasLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabelSelectRowCuenta)
                        .addGap(15, 15, 15)))
                .addContainerGap())
        );
        jPanelCuentasLayout.setVerticalGroup(
            jPanelCuentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCuentasLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addComponent(jLabelSelectRowCuenta)
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("     Cuentas     ", jPanelCuentas);

        jTable3.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"   Hacer Pago"},
                {"   Afiliar Un Cliente A Un Módulo De Pago"},
                {""}
            },
            new String [] {
                ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setGridColor(new java.awt.Color(255, 255, 255));
        jTable3.setRowHeight(41);
        jScrollPane3.setViewportView(jTable3);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/flexdesktop/Images/Buttons/listBtt.png"))); // NOI18N
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(22, 22, 22))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                .addGap(37, 37, 37)
                .addComponent(jLabel16)
                .addGap(30, 30, 30))
        );

        jTabbedPane1.addTab("     Pago     ", jPanel4);

        jTable4.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"   Transaciones Clientes Jurídicos"},
                {"   Transaciones Clientes Físicos"},
                {"   Cierres Realizados"},
                {"   Lista De Cuentas Por Campos"},
                {"   Bitacora De Errores FlexCore"},
                {"   Lista De Intereses Pagados A Una Cuenta De Ahorro Automático  "},
                {"   Ver Transacciones en vuelo"},
                {"   Ver historico"}
            },
            new String [] {
                "Reporte"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.setGridColor(new java.awt.Color(255, 255, 255));
        jTable4.setRowHeight(41);
        jScrollPane4.setViewportView(jTable4);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/flexdesktop/Images/Buttons/listBtt.png"))); // NOI18N
        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Tipo de reporte:");

        javax.swing.GroupLayout jPanelReportesLayout = new javax.swing.GroupLayout(jPanelReportes);
        jPanelReportes.setLayout(jPanelReportesLayout);
        jPanelReportesLayout.setHorizontalGroup(
            jPanelReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelReportesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(22, 22, 22))
            .addGroup(jPanelReportesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                    .addGroup(jPanelReportesLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelReportesLayout.setVerticalGroup(
            jPanelReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReportesLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addGap(29, 29, 29))
        );

        jTabbedPane1.addTab("     Reportes     ", jPanelReportes);

        jTableCierres.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jTableCierres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {""},
                {""},
                {"   Hacer Cierre"},
                {""},
                {""},
                {""}
            },
            new String [] {
                "Cierre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCierres.setGridColor(new java.awt.Color(255, 255, 255));
        jTableCierres.setRowHeight(41);
        jScrollPane7.setViewportView(jTableCierres);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/flexdesktop/Images/Buttons/listBtt.png"))); // NOI18N
        jLabel18.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelCierresLayout = new javax.swing.GroupLayout(jPanelCierres);
        jPanelCierres.setLayout(jPanelCierresLayout);
        jPanelCierresLayout.setHorizontalGroup(
            jPanelCierresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCierresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCierresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 793, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCierresLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel18)
                        .addGap(25, 25, 25)))
                .addGap(18, 18, 18))
        );
        jPanelCierresLayout.setVerticalGroup(
            jPanelCierresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCierresLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel18)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("      Cierres     ", jPanelCierres);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelVerSelectedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelVerSelectedMouseClicked

        int selection = jTableModuloCltFisico.getSelectedRow();

        if (selection == OPCION0) {//Si se elige registrar cliente fisico

            getInformation getInfoPanel = getInformation.getDialog();
            getInfoPanel.setActionIcon(10);
            getInfoPanel.showDialog("RegisterClt");

        } else if (selection == OPCION1) {//Si se elige consutar cliente
            getInformation getInfoPanel = getInformation.getDialog();
            getInfoPanel.setActionIcon(0);
            getInfoPanel.showDialog("ConsultarClt");

            getInfoPanel.SetTittle("Consultar Cliente");

        } else if (selection == OPCION2) {

            showCustomers sC = new showCustomers(null, true);
            sC.ocultarBotones("VerListadoAcciones");
            String[] columsNames = {"CIF", "Cédula", "Nombre", "Apellido",
                "DirecciónPrincipal", "Teléfono"};

            ArrayList<String> columnas_tabla = new ArrayList<>();
            columnas_tabla.add("cantClientes");

            ArrayList<ArrayList<String>> cCF = restfulConnection.
                    getRESTful("http://localhost:52003/api/cbclient"
                            + "/cantidadClientesFisicos",
                            columnas_tabla);

            int numeroPaginas = 0;
            numeroPaginas = Integer.parseInt(cCF.get(0).get(0)) / 19;

            int modulo = Integer.parseInt(cCF.get(0).get(0)) % 19;

            if (modulo != 0) {
                numeroPaginas += 1;
            }

            sC.setAccionActual(0);

            sC.setNumeroDePaginas(numeroPaginas);

            sC.setColumName(columsNames);
            sC.initPaginacion();
            sC.upDateCostumers();
            sC.showDialog();

        } else if (selection == OPCION3) {

            getInformation getInfoPanel = new getInformation(null, true);
            getInfoPanel.setActionIcon(1);
            //borrar cliente
            getInfoPanel.SetTittle("Eliminar Cliente");
            getInfoPanel.showDialog("ConsultarClt");

        } else if (selection == OPCION4) {

            getInformation getInfoPanel = new getInformation(null, true);
            getInfoPanel.SetTittle("Actualizar Cliente");
            getInfoPanel.setActionIcon(3);
            getInfoPanel.showDialog("ConsultarClt");

        }
    }//GEN-LAST:event_jLabelVerSelectedMouseClicked

    private void jLabelSelectRowCuentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSelectRowCuentaMouseClicked
        int selection = jTable2.getSelectedRow();
        CreateAccount CreateNewAccount = new CreateAccount(null, true);
        if (selection == ABRIRCUENTAAHORROALAVISTA) {
            CreateNewAccount.showDialog("CuentaAhorro");

        }
        if (selection == ABRIRCUENTAPOROBJETIVO) {
            CreateNewAccount.showDialog("CuentaPorObjetivo");
        }
    }//GEN-LAST:event_jLabelSelectRowCuentaMouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        int selection = jTable3.getSelectedRow();
        ModuloPago ModuloPagoD = new ModuloPago(null, true);
        if (selection == 1) {//Abrir cuenta ahorro a la vista
            ModuloPagoD.showDialog("CuentaAhorro");

        }
        if (selection == 0) {

            HacerPago pago = new HacerPago(this, true);
            pago.setVisible(true);

        }

    }//GEN-LAST:event_jLabel16MouseClicked

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        int selection = jTable4.getSelectedRow();

        if (selection == OPCION0) {
            getInformation getInfoPanel = getInformation.getSelf();
            getInfoPanel.setActionIcon(13);
            getInfoPanel.showDialog("ConsultarClt");
            getInfoPanel.SetTittle("Indicar Cliente");

        } else if (selection == OPCION1) {
            getInformation getInfoPanel = getInformation.getSelf();
            getInfoPanel.setActionIcon(14);
            getInfoPanel.showDialog("ConsultarClt");
            getInfoPanel.SetTittle("Indicar Cliente");
        } else if (selection == OPCION2) {
            ArrayList<String> columnas_tabla = new ArrayList<>();
            String[] colums = {"Número de cierre", "Fecha"};
            columnas_tabla.add("idCierre");
            columnas_tabla.add("FechaFinal");
            mostrarInfoTablaGenerica("http://localhost:52003/api/cbcierres/"
                    + "consultarCierresBancarios", columnas_tabla, colums);

        } else if (selection == OPCION3) {
            //Ver cuentas por campos(debito/ahorro)
            TipoDeCuenta selectTipoCuenta = new TipoDeCuenta(this, true);
            selectTipoCuenta.setVisible(true);
            int tipoDeCuenta = selectTipoCuenta.getTipo();
            if (tipoDeCuenta == 0) {

                ArrayList<String> columnas_tabla = new ArrayList<>();
                String[] colums = {"CIF Cliente", "Número Cuenta", "Estado",
                    "Desripcion", "Saldo Flotante", "Saldo Real"};
                columnas_tabla.add("idCliente");
                columnas_tabla.add("numeroCuenta");
                columnas_tabla.add("Estado");
                columnas_tabla.add("Desripcion");
                columnas_tabla.add("SaldoFlotante");
                columnas_tabla.add("SaldoReal");
                mostrarInfoTablaGenerica("http://localhost:52003/api/cbcuenta/"
                        + "obtenerCuentasDebito", columnas_tabla, colums);

            }
            if (tipoDeCuenta == 1) {

                ArrayList<String> columnas_tabla = new ArrayList<>();
                String[] colums = {"CIF Cliente", "Número Cuenta",
                    "Monto Ahorro Deseado", "Monto Ahorro Actual",
                    "Monto Ahorro",
                    "Fecha Inicio", "Fecha Final", "Fecha Próximo Pago"};
                columnas_tabla.add("CIF");
                columnas_tabla.add("numeroCuenta");

                columnas_tabla.add("MontoAhorroDeseado");
                columnas_tabla.add("MontoAhorroActual");
                columnas_tabla.add("MontoAhorro");
                columnas_tabla.add("FechaInicio");
                columnas_tabla.add("FechaFinal");
                columnas_tabla.add("FechaProximoPago");
                mostrarInfoTablaGenerica("http://localhost:52003/api/cbcuenta/"
                        + "obtenerCuentasAhorro", columnas_tabla, colums);
            }

        } else if (selection == OPCION4) {

            String[] colums = {"Fecha", "Número de error", "Mensaje"};
            ArrayList<String> columnas_tabla = new ArrayList<>();
            columnas_tabla.add("Fecha");
            columnas_tabla.add("numeroError");
            columnas_tabla.add("Mensaje");
            mostrarInfoTablaGenerica("http://localhost:52003/api/cbhistorico/"
                    + "obtenerBitacoraErrores", columnas_tabla, colums);
        } else if (selection == OPCION5) {

            String[] colums = {"Fecha", "Número de cuenta", "Interes obtenidos",
                "Monto cobrado"};
            ArrayList<String> columnas_tabla = new ArrayList<>();
            columnas_tabla.add("Fecha");
            columnas_tabla.add("idCuentaAhorro");
            columnas_tabla.add("interesCobrado");
            columnas_tabla.add("montoCobrado");
            mostrarInfoTablaGenerica("http://localhost:52003/api/cbInterese"
                    + "sObtenidos/obtenerInteres"
                    + "esObtenenidos", columnas_tabla, colums);

        } else if (selection == 6) {

            String[] colums = {"Fecha", "Número Cuenta", "Monto Transferido",
                "Tipo Transsacion"};
            ArrayList<String> columnas_tabla = new ArrayList<>();
            columnas_tabla.add("Fecha");
            columnas_tabla.add("NumeroCuenta");
            columnas_tabla.add("MontoTransferido");
            columnas_tabla.add("TipoTranssacion");

            mostrarInfoTablaGenerica("http://localhost:52003/api/cbtranssacione"
                    + "svuelo/consultarTransaccionesVuelo", columnas_tabla,
                    colums);

        } else if (selection == 7) {

            String[] colums = {"Fecha", "Número Cuenta", "Monto Transferido",
                "Tipo Transsacion"};
            ArrayList<String> columnas_tabla = new ArrayList<>();
            columnas_tabla.add("Fecha");
            columnas_tabla.add("NumeroCuenta");
            columnas_tabla.add("MontoTransferido");
            columnas_tabla.add("TipoTranssacion");

            mostrarInfoTablaGenerica("http://localhost:52003/api/cbh"
                    + "istorico/verHistorico", columnas_tabla,
                    colums);
        }
    }//GEN-LAST:event_jLabel17MouseClicked
    //Metodo Generico para mostrar datos en una tabla

    private void mostrarInfoTablaGenerica(String url,
            ArrayList<String> columnas_tabla, String[] colums) {
        showCustomers sC = new showCustomers(null, true);

        //Se hace la consulta de los datos
        ArrayList<ArrayList<String>> result = restfulConnection.
                getRESTful(url, columnas_tabla);

        sC.setColumName(colums);

        Object[][] cierres = getInformation.convertToObject(result);

        sC.setClientes(cierres);

        int numeroPaginas = cierres.length / 19;

        int modulo = cierres.length % 19;

        if (modulo != 0) {
            numeroPaginas += 1;
        }

        sC.setNumeroDePaginas(numeroPaginas);

        sC.setAccionActual(4);
        sC.upDateCostumers();
        sC.ocultarBotones("VerCuentas");
        sC.initPaginacion();
        sC.showDialog();

    }
    private void jLabelVerSelected1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelVerSelected1MouseClicked
        int selection = jTable5.getSelectedRow();

        if (selection == OPCION0) {
            getInformation getInfoPanel = new getInformation(null, true);
            getInfoPanel.setActionIcon(11);
            getInfoPanel.showDialog("RegisterCltJuridico");

        } else if (selection == OPCION1) {
            getInformation getInfoPanel = new getInformation(null, true);
            getInfoPanel.setActionIcon(12);
            getInfoPanel.showDialog("ConsultarClt");
            getInfoPanel.SetTittle("Consultar Cliente");

        } else if (selection == OPCION2) {

            showCustomers sC = new showCustomers(null, true);
            sC.ocultarBotones("VerListadoAcciones");
            String[] columsNames = {"CIF", "Cédula", "Nombre",
                "Teléfono", "DirecciónPrincipal"};

            ArrayList<String> columnas_tabla = new ArrayList<>();
            columnas_tabla.add("cantClientes");

            ArrayList<ArrayList<String>> cCF = restfulConnection.
                    getRESTful("http://localhost:52003/api/cbclient/"
                            + "cantidadClientesJuridico",
                            columnas_tabla);

            int numeroPaginas = 0;
            numeroPaginas = Integer.parseInt(cCF.get(0).get(0)) / 19;

            int modulo = Integer.parseInt(cCF.get(0).get(0)) % 19;

            if (modulo != 0) {
                numeroPaginas += 1;
            }

            sC.setAccionActual(1);

            sC.setNumeroDePaginas(numeroPaginas);

            sC.setColumName(columsNames);
            sC.initPaginacion();
            sC.upDateCostumers();
            sC.showDialog();

        } else if (selection == OPCION3) {
            getInformation getInfoPanel = new getInformation(null, true);
            getInfoPanel.setActionIcon(2);
            //borrar cliente
            getInfoPanel.SetTittle("Eliminar Cliente");
            getInfoPanel.showDialog("ConsultarClt");

        } else if (selection == OPCION4) {

            getInformation getInfoPanel = new getInformation(null, true);
            getInfoPanel.SetTittle("Actualizar Cliente");
            getInfoPanel.setActionIcon(4);
            getInfoPanel.showDialog("ConsultarClt");

        }
    }//GEN-LAST:event_jLabelVerSelected1MouseClicked

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        int selection = jTableCierres.getSelectedRow();

        if (selection == 2) {

            restfulConnection.postRESTful("http://localhost:52003/api/"
                    + "cbcierres/crearCierreBancario", "");

            String[] option = {"Aceptar"};
            JOptionPane.showOptionDialog(this,
                    "El Cierre se hizo correctamente", "¡Atención!", 0, 0,
                    null, option, 0);
        }
    }//GEN-LAST:event_jLabel18MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabelSelectRowCuenta;
    private javax.swing.JLabel jLabelVerSelected;
    private javax.swing.JLabel jLabelVerSelected1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelCierres;
    private javax.swing.JPanel jPanelCliente;
    private javax.swing.JPanel jPanelCltJuridico;
    private javax.swing.JPanel jPanelCuentas;
    private javax.swing.JPanel jPanelReportes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTableCierres;
    private javax.swing.JTable jTableModuloCltFisico;
    // End of variables declaration//GEN-END:variables
}
